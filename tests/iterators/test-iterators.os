Перем юТест;

Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт

	юТест = ЮнитТестирование;

	ВсеТесты = Новый Массив;
	ВсеТесты.Добавить("ТестДолжен_ОбойтиКоллекцию");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьЧтоМодулиСАннотациейКонструктораРаботают");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьЧтоИтераторПроверяетсяПриКомпиляции");
	
	Возврат ВсеТесты;

КонецФункции

Процедура ТестДолжен_ОбойтиКоллекцию() Экспорт
    
    ТекКаталог = ТекущийСценарий().Каталог;
            
    ПодключитьСценарий(ОбъединитьПути(ТекКаталог, "iterator.os"), "ИтераторКоллекции");
    ПодключитьСценарий(ОбъединитьПути(ТекКаталог, "collection.os"), "Коллекция");
    
    Коллекция = Новый Коллекция;
    
    Индекс = 1;
    Для Каждого Элемент Из Коллекция цикл
        юТест.ПроверитьРавенство(Индекс, Элемент);
        Индекс = Индекс + 1;
    КонецЦикла;
    
    юТест.ПроверитьРавенство(10, Индекс);
КонецПроцедуры

Процедура ТестДолжен_ПроверитьЧтоМодулиСАннотациейКонструктораРаботают() Экспорт
    
    ТекКаталог = ТекущийСценарий().Каталог;
    
    ПодключитьСценарий(ОбъединитьПути(ТекКаталог, "collection_method_style.os"), "КоллекцияСАннотациейМетода");
    ПодключитьСценарий(ОбъединитьПути(ТекКаталог, "annotated_iterator.os"), "ИтераторСАннотацией");
    
    Коллекция = Новый КоллекцияСАннотациейМетода;
        
    Индекс = 1;
    Для Каждого Элемент Из Коллекция цикл
        юТест.ПроверитьРавенство(Индекс, Элемент);
        Индекс = Индекс + 1;
    КонецЦикла;
    
КонецПроцедуры

Процедура ТестДолжен_ПроверитьЧтоИтераторПроверяетсяПриКомпиляции() Экспорт
    
    Скрипт = "#Итератор
    |Процедура Привет() КонецПроцедуры";
    
    юТест.ПроверитьКодСОшибкой(Скрипт, "Обязательный метод Следующий отсутствует");    
КонецПроцедуры