Перем ЮнитТест;

#Область ОбработчикиСобытийМодуля

Функция ПолучитьСписокТестов(МенеджерТестирования) Экспорт
	
	ЮнитТест = МенеджерТестирования;
	
	СписокТестов = Новый Массив;
	СписокТестов.Добавить("ТестКонструктор");
	СписокТестов.Добавить("TestConstructor");
	СписокТестов.Добавить("ТестАннотация");
	СписокТестов.Добавить("ТестИмя");

	Возврат СписокТестов;

КонецФункции

#КонецОбласти

#Область ОбработчикиТестирования

Процедура ТестКонструктор() Экспорт

	Ограничение = Новый ОпределениеОграниченияИдентичностиXS;
	
	ЮнитТест.ПроверитьРавенство(ТипЗнч(Ограничение), Тип("ОпределениеОграниченияИдентичностиXS"));
	ЮнитТест.ПроверитьРавенство(Ограничение.ТипКомпоненты, ТипКомпонентыXS.ОпределениеОграниченияИдентичности);
	ЮнитТест.ПроверитьРавенство(Ограничение.Категория, КатегорияОграниченияИдентичностиXS.Ключ);
	ЮнитТест.ПроверитьРавенство(ТипЗнч(Ограничение.Компоненты), Тип("ФиксированныйСписокКомпонентXS"));
	ЮнитТест.ПроверитьРавенство(ТипЗнч(Ограничение.Поля), Тип("СписокКомпонентXS"));
	
КонецПроцедуры

Procedure TestConstructor() Export

	Constraint = New XSIdentityConstraintDefinition;
	
	ЮнитТест.ПроверитьРавенство(TypeOf(Constraint), Type("XSIdentityConstraintDefinition"));
	ЮнитТест.ПроверитьРавенство(Constraint.ComponentType, XSComponentType.IdentityConstraintDefinition);

EndProcedure

Процедура ТестАннотация() Экспорт

	Ограничение = Новый ОпределениеОграниченияИдентичностиXS;

	Аннотация = Новый АннотацияXS;
	Ограничение.Аннотация = Аннотация;

	ЮнитТест.ПроверитьРавенство(Ограничение.Аннотация, Аннотация);
	ЮнитТест.ПроверитьРавенство(Аннотация.Контейнер, Ограничение);

КонецПроцедуры

Процедура ТестИмя() Экспорт

	Ограничение = Новый ОпределениеОграниченияИдентичностиXS;

	Ограничение.Имя = "test";

	ЮнитТест.ПроверитьРавенство(Ограничение.Имя, "test");

КонецПроцедуры

#КонецОбласти