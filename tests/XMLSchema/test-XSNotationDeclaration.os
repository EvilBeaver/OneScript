Перем ЮнитТест;

#Область ОбработчикиСобытийМодуля

Функция ПолучитьСписокТестов(МенеджерТестирования) Экспорт
	
	ЮнитТест = МенеджерТестирования;

	СписокТестов = Новый Массив;
	СписокТестов.Добавить("ТестКонструктор");
	СписокТестов.Добавить("TestConstructor");
	СписокТестов.Добавить("ТестАннотация");
	СписокТестов.Добавить("ТестИмя");
	СписокТестов.Добавить("ТестПубличныйИдентификатор");
	СписокТестов.Добавить("ТестСистемныйИдентификатор");
	
	Возврат СписокТестов;

КонецФункции

#КонецОбласти

#Область ОбработчикиТестирования

Процедура ТестКонструктор() Экспорт

	Нотация = Новый ОбъявлениеНотацииXS;

	ЮнитТест.ПроверитьРавенство(ТипЗнч(Нотация), Тип("ОбъявлениеНотацииXS"));
	ЮнитТест.ПроверитьРавенство(Нотация.ТипКомпоненты, ТипКомпонентыXS.ОбъявлениеНотации);
	
КонецПроцедуры

Procedure TestConstructor() Export

	Notation = New XSNotationDeclaration;

	ЮнитТест.ПроверитьРавенство(TypeOf(Notation), Type("XSNotationDeclaration"));
	ЮнитТест.ПроверитьРавенство(Notation.ComponentType, XSComponentType.NotationDeclaration);

EndProcedure

Процедура ТестАннотация() Экспорт

	Нотация = Новый ОбъявлениеНотацииXS;

	Аннотация = Новый АннотацияXS;
	Нотация.Аннотация = Аннотация;

	ЮнитТест.ПроверитьРавенство(Нотация.Аннотация, Аннотация);
	ЮнитТест.ПроверитьРавенство(Аннотация.Контейнер, Нотация);

КонецПроцедуры

Процедура ТестИмя() Экспорт

	Нотация = Новый ОбъявлениеНотацииXS;

	Нотация.Имя = "test";

	ЮнитТест.ПроверитьРавенство(Нотация.Имя, "test");

КонецПроцедуры

Процедура ТестПубличныйИдентификатор() Экспорт

	Нотация = Новый ОбъявлениеНотацииXS;

	Нотация.ПубличныйИдентификатор = "test";

	ЮнитТест.ПроверитьРавенство(Нотация.ПубличныйИдентификатор, "test");

КонецПроцедуры

Процедура ТестСистемныйИдентификатор() Экспорт

	Нотация = Новый ОбъявлениеНотацииXS;

	Нотация.СистемныйИдентификатор = "test";

	ЮнитТест.ПроверитьРавенство(Нотация.СистемныйИдентификатор, "test");

КонецПроцедуры

#КонецОбласти