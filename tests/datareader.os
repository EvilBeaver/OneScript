Перем юТест;

Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	
	юТест = ЮнитТестирование;
	
	ВсеТесты = Новый Массив;
	
	//ВсеТесты.Добавить("ТестДолженПроверить_ЧтоПрочитатьБайтВозвращаетНеопределеноВКонцеПотока");
	//ВсеТесты.Добавить("ТестДолженПроверить_ЧтоПрочитатьЦелоеВозвращаетНеопределеноВКонцеПотока");
	//ВсеТесты.Добавить("ТестДолженПроверить_ЧтоПрочитатьЦелоеВозвращаетНеопределеноВКонцеНевыровненныхДанных");
	ВсеТесты.Добавить("ТестДолженПроверить_ПопыткуСозданияСНевернымТипомПараметра");

	Возврат ВсеТесты;
	
КонецФункции

Процедура ТестДолженПроверить_ЧтоПрочитатьБайтВозвращаетНеопределеноВКонцеПотока() Экспорт

	Данные = ПолучитьДвоичныеДанныеИзHexСтроки("01 02 03 04 05");
	Чтение = Новый ЧтениеДанных(Данные);
	Рез = "[";
	Пока Истина Цикл
		Ц = Чтение.ПрочитатьБайт();
		Если Ц = Неопределено Тогда
			Рез = Рез + "]";
			Прервать;
		КонецЕсли;
		Рез = Рез + Ц;
	КонецЦикла;
	Чтение.Закрыть();  
	юТест.ПроверитьРавенство(Рез, "[12345]", "Чтение байтов");
КонецПроцедуры

Процедура ТестДолженПроверить_ЧтоПрочитатьЦелоеВозвращаетНеопределеноВКонцеПотока() Экспорт

	Данные = ПолучитьДвоичныеДанныеИзHexСтроки("0100 0200 0300 0400");
	Чтение = Новый ЧтениеДанных(Данные);
	Рез = "[";
	Пока Истина Цикл
		Ц = Чтение.ПрочитатьЦелое16();
		Если Ц = Неопределено Тогда
			Рез = Рез + "]";
			Прервать;
		КонецЕсли;
		Рез = Рез + Ц;
	КонецЦикла;
	Чтение.Закрыть();  
	юТест.ПроверитьРавенство(Рез, "[1234]", "Целое 16 бит");

	Данные = ПолучитьДвоичныеДанныеИзHexСтроки("01000000 02000000 03000000");
	Чтение = Новый ЧтениеДанных(Данные);
	Рез = "[";
	Пока Истина Цикл
		Ц = Чтение.ПрочитатьЦелое32();
		Если Ц = Неопределено Тогда
			Рез = Рез + "]";
			Прервать;
		КонецЕсли;
		Рез = Рез + Ц;
	КонецЦикла;
	Чтение.Закрыть();  
	юТест.ПроверитьРавенство(Рез, "[123]", "Целое 32 бита");

	Данные = ПолучитьДвоичныеДанныеИзHexСтроки("0100000000000000 0200000000000000");
	Чтение = Новый ЧтениеДанных(Данные);
	Рез = "[";
	Пока Истина Цикл
		Ц = Чтение.ПрочитатьЦелое64();
		Если Ц = Неопределено Тогда
			Рез = Рез + "]";
			Прервать;
		КонецЕсли;
		Рез = Рез + Ц;
	КонецЦикла;
	Чтение.Закрыть();  
	юТест.ПроверитьРавенство(Рез, "[12]", "Целое 64 бита");

	Данные = ПолучитьДвоичныеДанныеИзHexСтроки("00000001 00000002 00000003");
	Чтение = Новый ЧтениеДанных(Данные);
	Рез = "[";
	Пока Истина Цикл
		Ц = Чтение.ПрочитатьЦелое32(ПорядокБайтов.BigEndian);
		Если Ц = Неопределено Тогда
			Рез = Рез + "]";
			Прервать;
		КонецЕсли;
		Рез = Рез + Ц;
	КонецЦикла;
	Чтение.Закрыть();  
	юТест.ПроверитьРавенство(Рез, "[123]", "Целое 32 бита BigEndian");

КонецПроцедуры

Процедура ТестДолженПроверить_ЧтоПрочитатьЦелоеВозвращаетНеопределеноВКонцеНевыровненныхДанных() Экспорт

	Данные = ПолучитьДвоичныеДанныеИзHexСтроки("0100 0200 0300 0400 05");
	Чтение = Новый ЧтениеДанных(Данные);
	Рез = "[";
	Пока НЕ Чтение.ЧтениеЗавершено Цикл
		Ц = Чтение.ПрочитатьЦелое16();
		Если Ц = Неопределено Тогда
			Рез = Рез + "]";
			Прервать;
		КонецЕсли;
		Рез = Рез + Ц;
	КонецЦикла;
	Чтение.Закрыть();  
	юТест.ПроверитьРавенство(Рез, "[1234]", "Целое 16 бит");

	Данные = ПолучитьДвоичныеДанныеИзHexСтроки("01000000 02000000 03000000 04");
	Чтение = Новый ЧтениеДанных(Данные);
	Рез = "[";
	Пока НЕ Чтение.ЧтениеЗавершено Цикл
		Ц = Чтение.ПрочитатьЦелое32();
		Если Ц = Неопределено Тогда
			Рез = Рез + "]";
			Прервать;
		КонецЕсли;
		Рез = Рез + Ц;
	КонецЦикла;
	Чтение.Закрыть();  
	юТест.ПроверитьРавенство(Рез, "[123]", "Целое 32 бита");

	Данные = ПолучитьДвоичныеДанныеИзHexСтроки("0100000000000000 0200000000000000 03");
	Чтение = Новый ЧтениеДанных(Данные);
	Рез = "[";
	Пока НЕ Чтение.ЧтениеЗавершено Цикл
		Ц = Чтение.ПрочитатьЦелое64();
		Если Ц = Неопределено Тогда
			Рез = Рез + "]";
			Прервать;
		КонецЕсли;
		Рез = Рез + Ц;
	КонецЦикла;
	Чтение.Закрыть();  
	юТест.ПроверитьРавенство(Рез, "[12]", "Целое 64 бита");

	Данные = ПолучитьДвоичныеДанныеИзHexСтроки("00000001 00000002 00000003 04");
	Чтение = Новый ЧтениеДанных(Данные);
	Рез = "[";
	Пока НЕ Чтение.ЧтениеЗавершено Цикл
		Ц = Чтение.ПрочитатьЦелое32(ПорядокБайтов.BigEndian);
		Если Ц = Неопределено Тогда
			Рез = Рез + "]";
			Прервать;
		КонецЕсли;
		Рез = Рез + Ц;
	КонецЦикла;
	Чтение.Закрыть();  
	юТест.ПроверитьРавенство(Рез, "[123]", "Целое 32 бита BigEndian");
КонецПроцедуры

Процедура ПопыткаСозданияСНевернымТипомПараметра(Пар)
	Попытка
		Чтение = Новый ЧтениеДанных(Пар);
	Исключение
		юТест.ПроверитьВхождение(ИнформацияОбОшибке().Описание,"Неверный тип",
			"Внешнее исключение вместо сообщения о неверном типе "+ТипЗнч(Пар));
		Возврат;
	КонецПопытки;
	юТест.ПрерватьТест("Новый ЧтениеДанных с неверным типом параметра должно выдавать исключение, но не выдало");
КонецПроцедуры

Процедура ТестДолженПроверить_ПопыткуСозданияСНевернымТипомПараметра() Экспорт
	ПопыткаСозданияСНевернымТипомПараметра(Неопределено);
	ПопыткаСозданияСНевернымТипомПараметра(0);
	ПопыткаСозданияСНевернымТипомПараметра(Новый БуферДвоичныхДанных(1));
КонецПроцедуры
