///////////////////////////////////////////////////////////////////////
//
// Тест класса СистемнаяИнформация
// 
//
///////////////////////////////////////////////////////////////////////

Перем юТест;

////////////////////////////////////////////////////////////////////
// Программный интерфейс

Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	
	юТест = ЮнитТестирование;
	
	ВсеТесты = Новый Массив;
	
	ВсеТесты.Добавить("ТестДолжен_ПолучитьЗначенияОкружения");
	ВсеТесты.Добавить("ТестДолжен_ПолучитьПеременнуюPATH");
	ВсеТесты.Добавить("ТестДолжен_УстановитьПеременную");
	ВсеТесты.Добавить("ТестДолжен_УстановитьПеременнуюСУказаниемУровня");
	
	Возврат ВсеТесты;
КонецФункции

Процедура ТестДолжен_ПолучитьЗначенияОкружения() Экспорт
	
	Переменные = ПеременныеСреды();
	
	юТест.ПроверитьЛожь(Переменные.Количество() = 0);
	
КонецПроцедуры

Процедура ТестДолжен_ПолучитьПеременнуюPATH() Экспорт
	
	юТест.ПроверитьЛожь(ПустаяСтрока(ПолучитьПеременнуюСреды("PATH")));
	
КонецПроцедуры

Процедура ТестДолжен_УстановитьПеременную() Экспорт
	
	СтароеЗначение = ПолучитьПеременнуюСреды("OS");
	НовоеЗначение = "NewTestValue";
	
	УстановитьПеременнуюСреды("OS", НовоеЗначение);
	
	юТест.ПроверитьРавенство(НовоеЗначение, ПолучитьПеременнуюСреды("OS"));
	
КонецПроцедуры

Процедура ТестДолжен_УстановитьПеременнуюСУказаниемУровня() Экспорт
	
	УстановитьПеременнуюСреды("TESTVAR1", "1", РасположениеПеременнойСреды.Процесс);
	
	Значение1 = ПолучитьПеременнуюСреды("TESTVAR1");
	юТест.ПроверитьРавенство(Значение1, "1");
	
КонецПроцедуры