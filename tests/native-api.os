Перем юТест;

Перем ВнешняяКомпонента;

Перем ЗаписьXML, ЗаписьZIP, КаталогСкрипта, КаталогПакета, СуффиксВерсии;

Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	
	юТест = ЮнитТестирование;
	
	ВсеТесты = Новый Массив;
	
	СистемнаяИнформация = Новый СистемнаяИнформация;
	ЭтоWindows = Найти(НРег(СистемнаяИнформация.ВерсияОС), "windows") > 0;
	Если ЭтоWindows Тогда
		ВсеТесты.Добавить("ТестДолжен_ПроверитьПодключениеВнешнейКомпонентыDLL");
		ВсеТесты.Добавить("ТестДолжен_ПроверитьСозданиеВнешнейКомпоненты");
		ВсеТесты.Добавить("ТестДолжен_ПроверитьПолучениеСвойстваКомпоненты");
		ВсеТесты.Добавить("ТестДолжен_ПроверитьВызовМетодаКомпоненты");
		ВсеТесты.Добавить("ТестДолжен_ПроверитьПодключениеКомпонентыZIP");
	КонецЕсли;
	
	Возврат ВсеТесты;
	
КонецФункции

Процедура ТестДолжен_ПроверитьПодключениеВнешнейКомпонентыDLL() Экспорт

	Си = Новый СистемнаяИнформация();
	Если Си.Это64БитнаяОперационнаяСистема Тогда
		ФайлБиблиотеки = "\native-api\bin64\AddInNativeWin64.dll";
	Иначе
		ФайлБиблиотеки = "\native-api\bin\AddInNativeWin32.dll";
	КонецЕсли;

	ПутьБиблиотеки = ТекущийСценарий().Каталог + ФайлБиблиотеки;
	Успешно = ПодключитьВнешнююКомпоненту(ПутьБиблиотеки, "AddinNative", ТипВнешнейКомпоненты.Native);

	юТест.ПроверитьРавенство(Успешно, Истина);

КонецПроцедуры

Процедура ТестДолжен_ПроверитьСозданиеВнешнейКомпоненты() Экспорт

	ИмяВнешнейКомпоненты = "AddIn.AddinNative.CAddInNative";
	ВнешняяКомпонента = Новый(ИмяВнешнейКомпоненты);

	юТест.ПроверитьРавенство(Строка(ТипЗнч(ВнешняяКомпонента)), Строка(Тип(ИмяВнешнейКомпоненты)));

КонецПроцедуры	

Процедура ТестДолжен_ПроверитьПолучениеСвойстваКомпоненты() Экспорт

	ВнешняяКомпонента.Включен = Истина;
	юТест.ПроверитьРавенство(ВнешняяКомпонента.Включен, Истина);

	ВнешняяКомпонента.Включен = Ложь;
	юТест.ПроверитьРавенство(ВнешняяКомпонента.Включен, Ложь);

КонецПроцедуры	

Процедура ТестДолжен_ПроверитьВызовМетодаКомпоненты() Экспорт

	ВнешняяКомпонента.Включить();
	юТест.ПроверитьРавенство(ВнешняяКомпонента.Включен, Истина);

	ВнешняяКомпонента.Выключить();
	юТест.ПроверитьРавенство(ВнешняяКомпонента.Включен, Ложь);

КонецПроцедуры	

Процедура ТестДолжен_ПроверитьПодключениеКомпонентыZIP() Экспорт

	ИмяФайлаПакета = юТест.ИмяВременногоФайла();
	ЗаписьZIP = Новый ЗаписьZipФайла(ИмяФайлаПакета); 
	Каталог = ТекущийСценарий().Каталог + "\native-api\";
	ЗаписьZIP.Добавить(Каталог + "MANIFEST.XML", РежимСохраненияПутейZIP.НеСохранятьПути);

	МасивФайлов = Новый Массив;
	МасивФайлов.Добавить("bin\AddInNativeWin32.dll");
	МасивФайлов.Добавить("bin64\AddInNativeWin64.dll");
	МасивФайлов.Добавить("build32\libAddInNativeLin32.so");
	МасивФайлов.Добавить("build64\libAddInNativeLin64.so");
	
	Для каждого ИмяФайла из МасивФайлов Цикл
		ПутьФайла = Каталог + ИмяФайла;
		Файл = Новый Файл(ПутьФайла);
		Если Файл.Существует() Тогда
			ЗаписьZIP.Добавить(ПутьФайла, РежимСохраненияПутейZIP.НеСохранятьПути);
		КонецЕсли;
	КонецЦикла;

	ЗаписьZIP.Записать();

	Успешно = ПодключитьВнешнююКомпоненту(ИмяФайлаПакета, "AddinNativeZip", ТипВнешнейКомпоненты.Native);
	юТест.ПроверитьРавенство(Успешно, Истина);

	ИмяВнешнейКомпоненты = "AddIn.AddinNativeZip.CAddInNative";
	ВнешняяКомпонента = Новый(ИмяВнешнейКомпоненты);

	ВнешняяКомпонента.Включить();
	юТест.ПроверитьРавенство(ВнешняяКомпонента.Включен, Истина);

	ВнешняяКомпонента.Выключить();
	юТест.ПроверитьРавенство(ВнешняяКомпонента.Включен, Ложь);

КонецПроцедуры	
